CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    role user_role NOT NULL DEFAULT 'viewer',
    department VARCHAR(100),
    phone VARCHAR(20),
    is_active BOOLEAN NOT NULL DEFAULT true,
    is_verified BOOLEAN NOT NULL DEFAULT false,
    last_login_at TIMESTAMPTZ,
    password_changed_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_by UUID,
    CONSTRAINT users_email_valid CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'),
    CONSTRAINT users_phone_valid CHECK (phone IS NULL OR phone ~ '^[\+\-\(\)\s\d]+$')
);

CREATE TABLE model_versions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    version_number VARCHAR(20) NOT NULL UNIQUE,
    model_name VARCHAR(100) NOT NULL,
    model_type VARCHAR(50) NOT NULL,
    file_path VARCHAR(500) NOT NULL,
    scaler_path VARCHAR(500),
    feature_columns JSONB NOT NULL,
    performance_metrics JSONB NOT NULL,
    training_data_info JSONB,
    is_active BOOLEAN NOT NULL DEFAULT false,
    is_production BOOLEAN NOT NULL DEFAULT false,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_by UUID NOT NULL REFERENCES users(id),
    activated_at TIMESTAMPTZ,
    deprecated_at TIMESTAMPTZ
);

CREATE TABLE user_sessions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    session_token VARCHAR(255) NOT NULL UNIQUE,
    refresh_token VARCHAR(255),
    ip_address INET,
    user_agent TEXT,
    is_active BOOLEAN NOT NULL DEFAULT true,
    expires_at TIMESTAMPTZ NOT NULL,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    last_activity_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

CREATE TABLE applicants (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    application_number VARCHAR(50) NOT NULL UNIQUE,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    date_of_birth DATE NOT NULL,
    age INTEGER,
    ssn_last_4 VARCHAR(4),
    email VARCHAR(255),
    phone VARCHAR(20),
    address_line_1 VARCHAR(255) NOT NULL,
    address_line_2 VARCHAR(255),
    city VARCHAR(100) NOT NULL,
    state VARCHAR(50) NOT NULL,
    zip_code VARCHAR(10) NOT NULL,
    country VARCHAR(100) NOT NULL DEFAULT 'United States',
    employment_status employment_status NOT NULL,
    employer_name VARCHAR(255),
    job_title VARCHAR(100),
    employment_length_years DECIMAL(4,2),
    annual_income DECIMAL(12,2) NOT NULL,
    monthly_income DECIMAL(10,2),
    education_level education_level,
    existing_debts DECIMAL(12,2) DEFAULT 0,
    assets_value DECIMAL(12,2) DEFAULT 0,
    savings_account_balance DECIMAL(12,2) DEFAULT 0,
    debt_to_income_ratio DECIMAL(5,4),
    credit_score INTEGER,
    credit_history_length_years DECIMAL(4,2),
    number_of_credit_inquiries INTEGER DEFAULT 0,
    number_of_open_accounts INTEGER DEFAULT 0,
    payment_history_score DECIMAL(5,2),
    home_ownership home_ownership,
    years_at_current_address DECIMAL(4,2),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_by UUID NOT NULL REFERENCES users(id),
    CONSTRAINT applicants_age_valid CHECK (age IS NULL OR (age >= 18 AND age <= 100)),
    CONSTRAINT applicants_income_positive CHECK (annual_income > 0),
    CONSTRAINT applicants_credit_score_valid CHECK (credit_score IS NULL OR (credit_score >= 300 AND credit_score <= 850)),
    CONSTRAINT applicants_payment_history_valid CHECK (payment_history_score IS NULL OR (payment_history_score >= 0 AND payment_history_score <= 100)),
    CONSTRAINT applicants_email_valid CHECK (email IS NULL OR email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'),
    CONSTRAINT applicants_debt_ratio_valid CHECK (debt_to_income_ratio IS NULL OR (debt_to_income_ratio >= 0 AND debt_to_income_ratio <= 5))
);

CREATE TABLE loan_applications (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    applicant_id UUID NOT NULL REFERENCES applicants(id) ON DELETE CASCADE,
    loan_amount DECIMAL(12,2) NOT NULL,
    loan_purpose loan_purpose NOT NULL,
    loan_term_months INTEGER NOT NULL,
    requested_interest_rate DECIMAL(5,4),
    loan_to_income_ratio DECIMAL(5,4),
    status application_status NOT NULL DEFAULT 'draft',
    submitted_at TIMESTAMPTZ,
    reviewed_at TIMESTAMPTZ,
    decision_at TIMESTAMPTZ,
    decision_reason TEXT,
    assigned_loan_officer UUID REFERENCES users(id),
    assigned_underwriter UUID REFERENCES users(id),
    priority_level INTEGER DEFAULT 3,
    required_documents JSONB,
    uploaded_documents JSONB,
    internal_notes TEXT,
    applicant_notes TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_by UUID NOT NULL REFERENCES users(id),
    CONSTRAINT loan_applications_amount_positive CHECK (loan_amount > 0),
    CONSTRAINT loan_applications_term_valid CHECK (loan_term_months > 0 AND loan_term_months <= 480),
    CONSTRAINT loan_applications_rate_valid CHECK (requested_interest_rate IS NULL OR (requested_interest_rate > 0 AND requested_interest_rate < 1)),
    CONSTRAINT loan_applications_priority_valid CHECK (priority_level BETWEEN 1 AND 4),
    CONSTRAINT loan_applications_loan_ratio_valid CHECK (loan_to_income_ratio IS NULL OR (loan_to_income_ratio >= 0 AND loan_to_income_ratio <= 10))
);

CREATE TABLE predictions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    loan_application_id UUID NOT NULL REFERENCES loan_applications(id) ON DELETE CASCADE,
    model_version_id UUID NOT NULL REFERENCES model_versions(id),
    risk_score DECIMAL(10,8) NOT NULL,
    risk_category risk_category NOT NULL,
    confidence_score DECIMAL(10,8) NOT NULL,
    recommendation VARCHAR(20) NOT NULL CHECK (recommendation IN ('approve', 'review', 'reject')),
    recommendation_reason TEXT,
    feature_importance JSONB NOT NULL,
    input_features JSONB NOT NULL,
    status prediction_status NOT NULL DEFAULT 'pending',
    processing_time_ms INTEGER,
    error_message TEXT,
    predicted_default_probability DECIMAL(10,8),
    risk_adjusted_rate DECIMAL(5,4),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    created_by UUID NOT NULL REFERENCES users(id),
    CONSTRAINT predictions_risk_score_valid CHECK (risk_score >= 0 AND risk_score <= 1),
    CONSTRAINT predictions_confidence_valid CHECK (confidence_score >= 0 AND confidence_score <= 1),
    CONSTRAINT predictions_processing_time_valid CHECK (processing_time_ms IS NULL OR processing_time_ms >= 0),
    CONSTRAINT predictions_default_prob_valid CHECK (predicted_default_probability IS NULL OR (predicted_default_probability >= 0 AND predicted_default_probability <= 1))
);

CREATE TABLE prediction_features (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    prediction_id UUID NOT NULL REFERENCES predictions(id) ON DELETE CASCADE,
    feature_name VARCHAR(100) NOT NULL,
    feature_value DECIMAL(15,8),
    feature_value_text VARCHAR(255),
    importance_score DECIMAL(10,8) NOT NULL,
    impact_direction VARCHAR(10) CHECK (impact_direction IN ('positive', 'negative', 'neutral')),
    display_name VARCHAR(100),
    description TEXT,
    CONSTRAINT prediction_features_importance_valid CHECK (importance_score >= 0 AND importance_score <= 1),
    CONSTRAINT prediction_features_unique UNIQUE (prediction_id, feature_name)
);

CREATE TABLE audit_logs (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID REFERENCES users(id),
    session_id UUID REFERENCES user_sessions(id),
    action audit_action NOT NULL,
    resource_type VARCHAR(50) NOT NULL,
    resource_id UUID,
    old_values JSONB,
    new_values JSONB,
    ip_address INET,
    user_agent TEXT,
    request_method VARCHAR(10),
    request_path VARCHAR(500),
    request_params JSONB,
    response_status INTEGER,
    response_time_ms INTEGER,
    business_reason TEXT,
    compliance_notes TEXT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT audit_logs_response_status_valid CHECK (response_status IS NULL OR (response_status >= 100 AND response_status < 600))
);
